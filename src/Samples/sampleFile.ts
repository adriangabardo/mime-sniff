/**
 * THIS IS A README.HTML FILE
 */

export const base64example: string =
  "";

export const bufferExample = (): Buffer => Buffer.from(base64example, "base64");

// THIS IS THE SAME README FILE BUT WITH THE EXTENSION SET TO PDF
export const impostorBase64Example: string =
  "";
